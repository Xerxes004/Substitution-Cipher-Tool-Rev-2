/**
 * Author : Wesley Kelly
 */
package SubstitutionCipherTool;
import javax.swing.JFileChooser;


/**
 *
 * @author WesKellyPC
 */
public class MainGUIWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainGUIWindow
     */
    public MainGUIWindow() {
        initComponents();
        
        this.setLocationRelativeTo(null);
        this.pack();
        this.setTitle("Substitution Cipher Tool - Wesley Kelly, James Von Eiff");
        
        FileSelector.setDialogTitle("Select File");
        
        parser = new FileParser();
    }
    
    private final FileParser parser;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FileSelector = new javax.swing.JFileChooser();
        WarningDialog = new javax.swing.JDialog();
        WarningDialogPanel = new javax.swing.JPanel();
        WarningIcon = new javax.swing.JLabel();
        CancelButton = new javax.swing.JButton();
        RecalibrateButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jMenu3 = new javax.swing.JMenu();
        MainWindowPane = new javax.swing.JPanel();
        CalibrationFileSelectorLabel = new javax.swing.JLabel();
        SelectCalibrationFileButton = new javax.swing.JButton();
        CipherFileSelectorLabel = new javax.swing.JLabel();
        SelectCipherFileButton = new javax.swing.JButton();
        CalibrationFileBrowserLabel = new javax.swing.JLabel();
        CipherFileBrowserLabel = new javax.swing.JLabel();
        CalFreqScrollPane = new javax.swing.JScrollPane();
        CalibrationDataFieldTextArea = new javax.swing.JTextArea();
        CipherFreqScrollPane = new javax.swing.JScrollPane();
        CipherDataFieldTextArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        RawCipherTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        CurrentGuessTextArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        SetGuessToCipherButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        SaveCurrentGuess = new javax.swing.JMenuItem();
        ExitProgramMenuItem = new javax.swing.JMenuItem();

        FileSelector.setDialogType(javax.swing.JFileChooser.CUSTOM_DIALOG);
        FileSelector.setCurrentDirectory(new java.io.File("D:\\Dropbox\\Cedarville\\2-Sophomore\\Spring 2015\\Computer Security\\Programming Projects\\Proj 1\\shakespeare_cipher.txt"));

        WarningDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        WarningDialog.setForeground(new java.awt.Color(255, 255, 255));
        WarningDialog.setMinimumSize(new java.awt.Dimension(203, 144));
        WarningDialog.setResizable(false);

        WarningDialogPanel.setBackground(new java.awt.Color(255, 255, 255));
        WarningDialogPanel.setMaximumSize(new java.awt.Dimension(203, 144));
        WarningDialogPanel.setMinimumSize(new java.awt.Dimension(203, 144));

        WarningIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SubstitutionCipherTool/genericwarning.jpeg"))); // NOI18N

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        RecalibrateButton.setText("Accept");
        RecalibrateButton.setDefaultCapable(false);
        RecalibrateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecalibrateButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("This will overwrite your current guess.");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Warning");

        javax.swing.GroupLayout WarningDialogPanelLayout = new javax.swing.GroupLayout(WarningDialogPanel);
        WarningDialogPanel.setLayout(WarningDialogPanelLayout);
        WarningDialogPanelLayout.setHorizontalGroup(
            WarningDialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WarningDialogPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(WarningDialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(WarningDialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3)
                        .addGroup(WarningDialogPanelLayout.createSequentialGroup()
                            .addComponent(RecalibrateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(CancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(WarningDialogPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(76, 76, 76)
                        .addComponent(WarningIcon)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        WarningDialogPanelLayout.setVerticalGroup(
            WarningDialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WarningDialogPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(WarningDialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(WarningIcon)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(14, 14, 14)
                .addGroup(WarningDialogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RecalibrateButton)
                    .addComponent(CancelButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout WarningDialogLayout = new javax.swing.GroupLayout(WarningDialog.getContentPane());
        WarningDialog.getContentPane().setLayout(WarningDialogLayout);
        WarningDialogLayout.setHorizontalGroup(
            WarningDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(WarningDialogPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        WarningDialogLayout.setVerticalGroup(
            WarningDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(WarningDialogPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Substitution Cipher Tool - Wesley Kelly, James Von Eiff");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(1, 1));
        setResizable(false);

        MainWindowPane.setName("Substitution Cipher Cracker"); // NOI18N

        CalibrationFileSelectorLabel.setBackground(new java.awt.Color(255, 255, 255));
        CalibrationFileSelectorLabel.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        CalibrationFileSelectorLabel.setText(" ");
        CalibrationFileSelectorLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        CalibrationFileSelectorLabel.setOpaque(true);

        SelectCalibrationFileButton.setText("Select Calibration File...");
        SelectCalibrationFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectCalibrationFileButtonActionPerformed(evt);
            }
        });

        CipherFileSelectorLabel.setBackground(new java.awt.Color(255, 255, 255));
        CipherFileSelectorLabel.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        CipherFileSelectorLabel.setText("  ");
        CipherFileSelectorLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        CipherFileSelectorLabel.setOpaque(true);

        SelectCipherFileButton.setText("Select Cipher File...");
        SelectCipherFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectCipherFileButtonActionPerformed(evt);
            }
        });

        CalibrationFileBrowserLabel.setText("Calibration File");

        CipherFileBrowserLabel.setText("Cipher File");

        CalFreqScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "Calibration Freqs", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Arial", 0, 12))); // NOI18N
        CalFreqScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        CalFreqScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        CalFreqScrollPane.setMaximumSize(new java.awt.Dimension(90, 500));
        CalFreqScrollPane.setMinimumSize(new java.awt.Dimension(90, 500));
        CalFreqScrollPane.setPreferredSize(new java.awt.Dimension(90, 500));
        CalFreqScrollPane.setRequestFocusEnabled(false);

        CalibrationDataFieldTextArea.setEditable(false);
        CalibrationDataFieldTextArea.setBackground(new java.awt.Color(250, 250, 250));
        CalibrationDataFieldTextArea.setColumns(20);
        CalibrationDataFieldTextArea.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        CalibrationDataFieldTextArea.setRows(4);
        CalibrationDataFieldTextArea.setTabSize(4);
        CalibrationDataFieldTextArea.setAutoscrolls(false);
        CalibrationDataFieldTextArea.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        CalibrationDataFieldTextArea.setMaximumSize(new java.awt.Dimension(90, 500));
        CalibrationDataFieldTextArea.setMinimumSize(new java.awt.Dimension(90, 500));
        CalFreqScrollPane.setViewportView(CalibrationDataFieldTextArea);

        CipherFreqScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "Cipher Freqs", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Arial", 0, 12))); // NOI18N
        CipherFreqScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        CipherFreqScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        CipherFreqScrollPane.setMaximumSize(new java.awt.Dimension(90, 500));
        CipherFreqScrollPane.setMinimumSize(new java.awt.Dimension(90, 500));
        CipherFreqScrollPane.setPreferredSize(new java.awt.Dimension(90, 500));

        CipherDataFieldTextArea.setEditable(false);
        CipherDataFieldTextArea.setBackground(new java.awt.Color(250, 250, 250));
        CipherDataFieldTextArea.setColumns(20);
        CipherDataFieldTextArea.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        CipherDataFieldTextArea.setRows(5);
        CipherDataFieldTextArea.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        CipherDataFieldTextArea.setMaximumSize(new java.awt.Dimension(90, 500));
        CipherDataFieldTextArea.setMinimumSize(new java.awt.Dimension(90, 500));
        CipherFreqScrollPane.setViewportView(CipherDataFieldTextArea);

        jButton1.setText("Swap");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Swap");

        jLabel2.setText("with");

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "Cipher File Raw Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N
        jScrollPane1.setMaximumSize(new java.awt.Dimension(500, 250));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(500, 250));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(500, 250));

        RawCipherTextArea.setBackground(new java.awt.Color(250, 250, 250));
        RawCipherTextArea.setColumns(20);
        RawCipherTextArea.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        RawCipherTextArea.setLineWrap(true);
        RawCipherTextArea.setRows(5);
        RawCipherTextArea.setWrapStyleWord(true);
        RawCipherTextArea.setMaximumSize(new java.awt.Dimension(500, 500));
        RawCipherTextArea.setMinimumSize(new java.awt.Dimension(1, 1));
        RawCipherTextArea.setPreferredSize(null);
        jScrollPane1.setViewportView(RawCipherTextArea);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "Current Guess", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N
        jScrollPane2.setMaximumSize(new java.awt.Dimension(500, 250));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(500, 250));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(500, 250));

        CurrentGuessTextArea.setBackground(new java.awt.Color(250, 250, 250));
        CurrentGuessTextArea.setColumns(20);
        CurrentGuessTextArea.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        CurrentGuessTextArea.setLineWrap(true);
        CurrentGuessTextArea.setRows(5);
        CurrentGuessTextArea.setWrapStyleWord(true);
        CurrentGuessTextArea.setMaximumSize(new java.awt.Dimension(500, 250));
        CurrentGuessTextArea.setMinimumSize(new java.awt.Dimension(1, 1));
        CurrentGuessTextArea.setPreferredSize(null);
        jScrollPane2.setViewportView(CurrentGuessTextArea);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Cipher Freq Letter Swapper");

        jButton2.setText("Map Cipher");
        jButton2.setToolTipText("Maps the Calibration Frequency straight across to the Cipher Frequency");

        SetGuessToCipherButton.setText("Set Guess to Cipher Text");
        SetGuessToCipherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetGuessToCipherButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainWindowPaneLayout = new javax.swing.GroupLayout(MainWindowPane);
        MainWindowPane.setLayout(MainWindowPaneLayout);
        MainWindowPaneLayout.setHorizontalGroup(
            MainWindowPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainWindowPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainWindowPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainWindowPaneLayout.createSequentialGroup()
                        .addComponent(CalFreqScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CipherFreqScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MainWindowPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(MainWindowPaneLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SetGuessToCipherButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MainWindowPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(MainWindowPaneLayout.createSequentialGroup()
                        .addGroup(MainWindowPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CalibrationFileBrowserLabel)
                            .addComponent(CipherFileBrowserLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MainWindowPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CalibrationFileSelectorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CipherFileSelectorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MainWindowPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SelectCalibrationFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SelectCipherFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );
        MainWindowPaneLayout.setVerticalGroup(
            MainWindowPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainWindowPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainWindowPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CalibrationFileSelectorLabel)
                    .addComponent(CalibrationFileBrowserLabel)
                    .addComponent(SelectCalibrationFileButton))
                .addGap(3, 3, 3)
                .addGroup(MainWindowPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelectCipherFileButton)
                    .addComponent(CipherFileSelectorLabel)
                    .addComponent(CipherFileBrowserLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MainWindowPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(CipherFreqScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(MainWindowPaneLayout.createSequentialGroup()
                        .addGroup(MainWindowPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MainWindowPaneLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(MainWindowPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SetGuessToCipherButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CalFreqScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        FileMenu.setText("File");

        SaveCurrentGuess.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        SaveCurrentGuess.setText("Save Current Guess...");
        FileMenu.add(SaveCurrentGuess);

        ExitProgramMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        ExitProgramMenuItem.setText("Exit Program");
        FileMenu.add(ExitProgramMenuItem);

        jMenuBar1.add(FileMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MainWindowPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainWindowPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void RecalibrateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecalibrateButtonActionPerformed
        CurrentGuessTextArea.setText(parser.getRawCiphertext());
        CurrentGuessTextArea.setCaretPosition(0);
        WarningDialog.dispose();
    }//GEN-LAST:event_RecalibrateButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        WarningDialog.dispose();
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void SetGuessToCipherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetGuessToCipherButtonActionPerformed
        WarningDialog.setVisible(true);
        WarningDialog.setLocationRelativeTo(null);
        WarningDialog.pack();
    }//GEN-LAST:event_SetGuessToCipherButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void SelectCipherFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectCipherFileButtonActionPerformed
        //if we select the cipher file (select the "open" option or double click)
        if (FileSelector.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            parser.setCipherFile(FileSelector.getSelectedFile());
            CipherFileSelectorLabel.setText(parser.getCipherFile().getName());
            
            if(parser.parseAndCalibrateCipherFile()) {
                CipherDataFieldTextArea.setText(parser.getCiphertextCalibrationData());
                RawCipherTextArea.setText(parser.getRawCiphertext());
                RawCipherTextArea.setCaretPosition(0);
            }
        }
    }//GEN-LAST:event_SelectCipherFileButtonActionPerformed

    private void SelectCalibrationFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectCalibrationFileButtonActionPerformed
        //if we select the cipher file (select the "open" option or double click)
        if (FileSelector.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            parser.setCalibrationFile(FileSelector.getSelectedFile());
            CalibrationFileSelectorLabel.setText(parser.getCalibrationFile().getName());
            
            if(parser.parseAndCalibrateCalFile()) {
                CalibrationDataFieldTextArea.setText(parser.getCalibrationData());
                CalibrationDataFieldTextArea.setCaretPosition(0);
            }
        }
    }//GEN-LAST:event_SelectCalibrationFileButtonActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUIWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUIWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUIWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUIWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUIWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane CalFreqScrollPane;
    private javax.swing.JTextArea CalibrationDataFieldTextArea;
    private javax.swing.JLabel CalibrationFileBrowserLabel;
    private javax.swing.JLabel CalibrationFileSelectorLabel;
    private javax.swing.JButton CancelButton;
    private javax.swing.JTextArea CipherDataFieldTextArea;
    private javax.swing.JLabel CipherFileBrowserLabel;
    private javax.swing.JLabel CipherFileSelectorLabel;
    private javax.swing.JScrollPane CipherFreqScrollPane;
    private javax.swing.JTextArea CurrentGuessTextArea;
    private javax.swing.JMenuItem ExitProgramMenuItem;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JFileChooser FileSelector;
    private javax.swing.JPanel MainWindowPane;
    private javax.swing.JTextArea RawCipherTextArea;
    private javax.swing.JButton RecalibrateButton;
    private javax.swing.JMenuItem SaveCurrentGuess;
    private javax.swing.JButton SelectCalibrationFileButton;
    private javax.swing.JButton SelectCipherFileButton;
    private javax.swing.JButton SetGuessToCipherButton;
    private javax.swing.JDialog WarningDialog;
    private javax.swing.JPanel WarningDialogPanel;
    private javax.swing.JLabel WarningIcon;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
